>>> print_square = __import__('4-print_square').print_square

----------------------------
Test with integer
----------------------------

>>> print_square(4)
####
####
####
####

>>> print_square(0)

>>> print_square(-12)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/jeff/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 14, in print_square
    raise ValueError("size must be >= 0")
ValueError: size must be >= 0

>>> print_square(3 + 1)
####
####
####
####

----------------------------
Test with differents types
----------------------------

>>> print_square(3.14)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/jeff/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 12, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

>>> print_square(0xc)
############
############
############
############
############
############
############
############
############
############
############
############

>>> print_square(0o7)
#######
#######
#######
#######
#######
#######
#######

>>> print_square(0b100)
####
####
####
####

>>> print_square("hello")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/jeff/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 12, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

>>> print_square(3 + 0x1)
####
####
####
####

>>> print_square([1, 2])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/jeff/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 12, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

>>> print_square()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: print_square() missing 1 required positional argument: 'size'

>>> print_square(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/jeff/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 12, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

>>> print_square(True)
#