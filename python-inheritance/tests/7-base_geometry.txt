>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> geo = BaseGeometry()
>>> geo.area()
Traceback (most recent call last):
 ...
Exception: area() is not implemented

>>> geo.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> geo.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> geo.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> geo.integer_validator("name", 0)
Traceback (most recent call last):
...
ValueError: name must be greater than 0

>>> geo.integer_validator("name", -3)
Traceback (most recent call last):
...
ValueError: name must be greater than 0

>>> geo.integer_validator("name", (4, 5))
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> geo.integer_validator("name", [4, 5])
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> geo.integer_validator("name", False)
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> geo.integer_validator("name", {1})
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> geo.integer_validator("name", None)
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> geo.integer_validator("name", 3.6)
Traceback (most recent call last):
...
TypeError: name must be an integer